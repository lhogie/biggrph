<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_92) on Fri Jul 28 16:02:32 CEST 2017 -->
<title>GraphTopology</title>
<meta name="date" content="2017-07-28">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="GraphTopology";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":9,"i5":9,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10,"i17":10,"i18":10,"i19":10,"i20":10,"i21":10,"i22":10,"i23":10,"i24":10,"i25":10,"i26":10,"i27":10,"i28":10,"i29":10,"i30":10,"i31":10,"i32":10,"i33":10,"i34":10,"i35":10,"i36":10,"i37":10,"i38":10,"i39":10,"i40":10,"i41":10};
var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-all.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../biggrph/EdgeObjectAttributeTable.html" title="class in biggrph"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../biggrph/GraphTopology.LoadRequest.html" title="class in biggrph"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?biggrph/GraphTopology.html" target="_top">Frames</a></li>
<li><a href="GraphTopology.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">biggrph</div>
<h2 title="Class GraphTopology" class="title">Class GraphTopology</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>bigobject.LiveDistributedObject&lt;LocalData,SharedData&gt;</li>
<li>
<ul class="inheritance">
<li>dht.DHT&lt;java.io.Serializable,java.io.Serializable&gt;</li>
<li>
<ul class="inheritance">
<li>biggrph.GraphTopology</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd>ldjo.bsp.BSPable</dd>
</dl>
<hr>
<br>
<pre>public class <span class="typeNameLabel">GraphTopology</span>
extends dht.DHT&lt;java.io.Serializable,java.io.Serializable&gt;
implements ldjo.bsp.BSPable</pre>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== NESTED CLASS SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="nested.class.summary">
<!--   -->
</a>
<h3>Nested Class Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Nested Class Summary table, listing nested classes, and an explanation">
<caption><span>Nested Classes</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Class and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>protected static class&nbsp;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.LoadRequest.html" title="class in biggrph">GraphTopology.LoadRequest</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>protected static class&nbsp;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.SaveRequest.html" title="class in biggrph">GraphTopology.SaveRequest</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>protected static class&nbsp;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.SetBidirectionalRequest.html" title="class in biggrph">GraphTopology.SetBidirectionalRequest</a></span></code>&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="nested.classes.inherited.from.class.dht.DHT">
<!--   -->
</a>
<h3>Nested classes/interfaces inherited from class&nbsp;dht.DHT</h3>
<code>dht.DHT.DHTClearCompution&lt;T extends java.io.Serializable &amp; dht.Clearable&gt;, dht.DHT.DHTlocalFunction&lt;T,R&gt;, dht.DHT.DHTMapReduce&lt;T extends java.io.Serializable,R extends java.io.Serializable&gt;, dht.DHT.DHTreduceFunction&lt;R&gt;</code></li>
</ul>
</li>
</ul>
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>protected static java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#IN_EDGES_SUFFIX">IN_EDGES_SUFFIX</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>protected static java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#OUT_EDGES_SUFFIX">OUT_EDGES_SUFFIX</a></span></code>&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="fields.inherited.from.class.bigobject.LiveDistributedObject">
<!--   -->
</a>
<h3>Fields inherited from class&nbsp;bigobject.LiveDistributedObject</h3>
<code>LDOLocalDirectory, LDOLocalDirProperty, LDOLocalDirVariable, notdeploy</code></li>
</ul>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#GraphTopology-biggrph.dataset.BigGrphDataSet-boolean-boolean-boolean-long-">GraphTopology</a></span>(<a href="../biggrph/dataset/BigGrphDataSet.html" title="class in biggrph.dataset">BigGrphDataSet</a>&nbsp;dataset,
             boolean&nbsp;biDirectional,
             boolean&nbsp;multigraph,
             boolean&nbsp;undirected,
             long&nbsp;vertexCountEstimate)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#GraphTopology-biggrph.dataset.BigGrphDataSet-boolean-boolean-long-">GraphTopology</a></span>(<a href="../biggrph/dataset/BigGrphDataSet.html" title="class in biggrph.dataset">BigGrphDataSet</a>&nbsp;dataset,
             boolean&nbsp;biDirectional,
             boolean&nbsp;multigraph,
             long&nbsp;vertexCountEstimate)</code>
<div class="block">Creates a graph as a big distributed adjacency table.</div>
</td>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#GraphTopology-java.lang.String-dht.DHTAllocation-boolean-boolean-boolean-long-">GraphTopology</a></span>(java.lang.String&nbsp;id,
             dht.DHTAllocation&nbsp;allocation,
             boolean&nbsp;biDirectional,
             boolean&nbsp;multigraph,
             boolean&nbsp;undirected,
             long&nbsp;vertexCountEstimate)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#GraphTopology-java.lang.String-dht.DHTAllocation-boolean-boolean-long-">GraphTopology</a></span>(java.lang.String&nbsp;id,
             dht.DHTAllocation&nbsp;allocation,
             boolean&nbsp;biDirectional,
             boolean&nbsp;multigraph,
             long&nbsp;vertexCountEstimate)</code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code><a href="../biggrph/algo/connected_components/AssignConnectedComponents.html" title="class in biggrph.algo.connected_components">AssignConnectedComponents</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#Z:Z__getAssignConnectedComponents--">__getAssignConnectedComponents</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#Z:Z__local_loadFromDisk--">__local_loadFromDisk</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#addEdge-long-long-">addEdge</a></span>(long&nbsp;src,
       long&nbsp;dst)</code>&nbsp;</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#clearLocalData--">clearLocalData</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>static <a href="../biggrph/GraphTopology.html" title="class in biggrph">GraphTopology</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#createBidirectionalGraph-biggrph.dataset.BigGrphDataSet-long-">createBidirectionalGraph</a></span>(<a href="../biggrph/dataset/BigGrphDataSet.html" title="class in biggrph.dataset">BigGrphDataSet</a>&nbsp;dataset,
                        long&nbsp;vertexCountEstimate)</code>&nbsp;</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>static <a href="../biggrph/GraphTopology.html" title="class in biggrph">GraphTopology</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#createUndirectedGraph-biggrph.dataset.BigGrphDataSet-long-">createUndirectedGraph</a></span>(<a href="../biggrph/dataset/BigGrphDataSet.html" title="class in biggrph.dataset">BigGrphDataSet</a>&nbsp;dataset,
                     long&nbsp;vertexCountEstimate)</code>&nbsp;</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#delete--">delete</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>toools.math.DistributionForLongs</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#getConnectedComponentDistribution--">getConnectedComponentDistribution</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>dht.set.LongSet</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#getConnectedComponentRepresentatives--">getConnectedComponentRepresentatives</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code><a href="../biggrph/algo/diameter/DiameterResult.html" title="class in biggrph.algo.diameter">DiameterResult</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#getDiameter_iFUB-long-toools.util.LongPredicate-">getDiameter_iFUB</a></span>(long&nbsp;src,
                toools.util.LongPredicate&nbsp;vertexMatcher)</code>&nbsp;</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code><a href="../biggrph/algo/diameter/DiameterResult.html" title="class in biggrph.algo.diameter">DiameterResult</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#getDiameter_iFUB-toools.util.LongPredicate-">getDiameter_iFUB</a></span>(toools.util.LongPredicate&nbsp;vertexMatcher)</code>&nbsp;</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code><a href="../biggrph/BigAdjacencyTable.html" title="class in biggrph">BigAdjacencyTable</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#getInAdjacencyTable--">getInAdjacencyTable</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>dht.set.LongSet</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#getInNeighbors-long-">getInNeighbors</a></span>(long&nbsp;v)</code>&nbsp;</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>&lt;any&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#getLocalMap--">getLocalMap</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>long</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#getNumberOfConnectedComponents--">getNumberOfConnectedComponents</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code>long</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#getNumberOfEdges--">getNumberOfEdges</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>java.util.Map&lt;octojus.OctojusNode,<a href="../biggrph/_algo/count/EdgeAndVertexCount.html" title="class in biggrph._algo.count">EdgeAndVertexCount</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#getNumberOfEdgesAndVerticesPerNode--">getNumberOfEdgesAndVerticesPerNode</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code>java.util.Map&lt;octojus.OctojusNode,java.lang.Long&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#getNumberOfInEdgesPerNode--">getNumberOfInEdgesPerNode</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#getNumberOfLocalVertices--">getNumberOfLocalVertices</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i19" class="rowColor">
<td class="colFirst"><code>java.util.Map&lt;octojus.OctojusNode,java.lang.Long&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#getNumberOfOutEdgesPerNode--">getNumberOfOutEdgesPerNode</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i20" class="altColor">
<td class="colFirst"><code>long</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#getNumberOfVertices--">getNumberOfVertices</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i21" class="rowColor">
<td class="colFirst"><code>long</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#getNumberOfVertices-toools.util.LongPredicate-">getNumberOfVertices</a></span>(toools.util.LongPredicate&nbsp;filter)</code>&nbsp;</td>
</tr>
<tr id="i22" class="altColor">
<td class="colFirst"><code>java.util.Map&lt;octojus.OctojusNode,java.lang.Integer&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#getNumberOfVerticesPerNode--">getNumberOfVerticesPerNode</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i23" class="rowColor">
<td class="colFirst"><code><a href="../biggrph/BigAdjacencyTable.html" title="class in biggrph">BigAdjacencyTable</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#getOutAdjacencyTable--">getOutAdjacencyTable</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i24" class="altColor">
<td class="colFirst"><code>double</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#getOutAverageDegree--">getOutAverageDegree</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i25" class="rowColor">
<td class="colFirst"><code><a href="../biggrph/algo/degree/MaxDegreeAlgorithmResult.html" title="class in biggrph.algo.degree">MaxDegreeAlgorithmResult</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#getOutMaxDegree--">getOutMaxDegree</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i26" class="altColor">
<td class="colFirst"><code><a href="../biggrph/algo/degree/MaxDegreeAlgorithmResult.html" title="class in biggrph.algo.degree">MaxDegreeAlgorithmResult</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#getOutMaxDegree-toools.util.LongPredicate-">getOutMaxDegree</a></span>(toools.util.LongPredicate&nbsp;predicate)</code>&nbsp;</td>
</tr>
<tr id="i27" class="rowColor">
<td class="colFirst"><code>dht.set.LongSet</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#getOutNeighbors-long-">getOutNeighbors</a></span>(long&nbsp;v)</code>&nbsp;</td>
</tr>
<tr id="i28" class="altColor">
<td class="colFirst"><code>long</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#getVertexInTheGreatestConnectedComponent--">getVertexInTheGreatestConnectedComponent</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i29" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#isBiDirectional--">isBiDirectional</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i30" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#isMultigraph--">isMultigraph</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i31" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#isUndirected--">isUndirected</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i32" class="altColor">
<td class="colFirst"><code><a href="../biggrph/GraphTopology.html" title="class in biggrph">GraphTopology</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#load-bigobject.DataSet-">load</a></span>(bigobject.DataSet&lt;<a href="../biggrph/GraphTopology.html" title="class in biggrph">GraphTopology</a>&gt;&nbsp;dataset)</code>&nbsp;</td>
</tr>
<tr id="i33" class="rowColor">
<td class="colFirst"><code><a href="../biggrph/GraphTopology.html" title="class in biggrph">GraphTopology</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#load-bigobject.DataSet-boolean-">load</a></span>(bigobject.DataSet&lt;<a href="../biggrph/GraphTopology.html" title="class in biggrph">GraphTopology</a>&gt;&nbsp;dataset,
    boolean&nbsp;forceGlobalLoad)</code>&nbsp;</td>
</tr>
<tr id="i34" class="altColor">
<td class="colFirst"><code>long</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#pickRandomVertex-java.util.Random-">pickRandomVertex</a></span>(java.util.Random&nbsp;random)</code>&nbsp;</td>
</tr>
<tr id="i35" class="rowColor">
<td class="colFirst"><code>dht.set.LongSet</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#pickRandomVertices-java.util.Random-int-">pickRandomVertices</a></span>(java.util.Random&nbsp;random,
                  int&nbsp;n)</code>&nbsp;</td>
</tr>
<tr id="i36" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#save--">save</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i37" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#setBiDirectional-boolean-">setBiDirectional</a></span>(boolean&nbsp;biDirectional)</code>&nbsp;</td>
</tr>
<tr id="i38" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#setBiDirectional-boolean-boolean-">setBiDirectional</a></span>(boolean&nbsp;biDirectional,
                boolean&nbsp;verbose)</code>&nbsp;</td>
</tr>
<tr id="i39" class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#toString--">toString</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i40" class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#toString-boolean-">toString</a></span>(boolean&nbsp;humanNumbers)</code>&nbsp;</td>
</tr>
<tr id="i41" class="rowColor">
<td class="colFirst"><code>long</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../biggrph/GraphTopology.html#twoSweeps-long-toools.util.LongPredicate-">twoSweeps</a></span>(long&nbsp;src,
         toools.util.LongPredicate&nbsp;vertexMatcher)</code>&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.dht.DHT">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;dht.DHT</h3>
<code>clear, computeDistribution, computeDistribution, connectTo, count, getAllocation, isLocalElement, maxKey, maxValue, minKey, minValue, size</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.bigobject.LiveDistributedObject">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;bigobject.LiveDistributedObject</h3>
<code>__getLocalFile, __local__saveToDisk, __saveToLocalDisks, addServiceThread, connectTo, declareChildren, deploy, disseminateSharedFieldState, getID, getLocalData, getLocalFileExtension, getSharedData, load, loadFromLocalOrGlobalFilesIfLocalTheyDoNotExistButWriteThemInThisCase, setLocalData, setSharedData, unregister</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="OUT_EDGES_SUFFIX">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>OUT_EDGES_SUFFIX</h4>
<pre>protected static final&nbsp;java.lang.String OUT_EDGES_SUFFIX</pre>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../constant-values.html#biggrph.GraphTopology.OUT_EDGES_SUFFIX">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a name="IN_EDGES_SUFFIX">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>IN_EDGES_SUFFIX</h4>
<pre>protected static final&nbsp;java.lang.String IN_EDGES_SUFFIX</pre>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../constant-values.html#biggrph.GraphTopology.IN_EDGES_SUFFIX">Constant Field Values</a></dd>
</dl>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="GraphTopology-biggrph.dataset.BigGrphDataSet-boolean-boolean-long-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GraphTopology</h4>
<pre>public&nbsp;GraphTopology(<a href="../biggrph/dataset/BigGrphDataSet.html" title="class in biggrph.dataset">BigGrphDataSet</a>&nbsp;dataset,
                     boolean&nbsp;biDirectional,
                     boolean&nbsp;multigraph,
                     long&nbsp;vertexCountEstimate)</pre>
<div class="block">Creates a graph as a big distributed adjacency table.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>dataset</code> - The dataset that will be loaded to build the structure of the graph</dd>
<dd><code>biDirectional</code> - if true, all reverse edges found in the dataset are created in the graph</dd>
<dd><code>multigraph</code> - if true allows several edges between two vertices</dd>
<dd><code>vertexCountEstimate</code> - an upper bound estimate of the number of vertices in the graph. It is
        used to allocate internal structures with sufficient capacity to avoid resizing them
        during creation of the graph.</dd>
</dl>
</li>
</ul>
<a name="GraphTopology-biggrph.dataset.BigGrphDataSet-boolean-boolean-boolean-long-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GraphTopology</h4>
<pre>public&nbsp;GraphTopology(<a href="../biggrph/dataset/BigGrphDataSet.html" title="class in biggrph.dataset">BigGrphDataSet</a>&nbsp;dataset,
                     boolean&nbsp;biDirectional,
                     boolean&nbsp;multigraph,
                     boolean&nbsp;undirected,
                     long&nbsp;vertexCountEstimate)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>dataset</code> - The dataset that will be loaded to build the structure of the graph</dd>
<dd><code>biDirectional</code> - if true, all reverse edges found in the dataset are created in the graph</dd>
<dd><code>multigraph</code> - if true allows several edges between two vertices</dd>
<dd><code>undirected</code> - </dd>
<dd><code>vertexCountEstimate</code> - an upper bound estimate of the number of vertices in the graph. It is
        used to allocate internal structures with sufficient capacity to avoid resizing them
        during creation of the graph.</dd>
</dl>
</li>
</ul>
<a name="GraphTopology-java.lang.String-dht.DHTAllocation-boolean-boolean-long-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GraphTopology</h4>
<pre>public&nbsp;GraphTopology(java.lang.String&nbsp;id,
                     dht.DHTAllocation&nbsp;allocation,
                     boolean&nbsp;biDirectional,
                     boolean&nbsp;multigraph,
                     long&nbsp;vertexCountEstimate)</pre>
</li>
</ul>
<a name="GraphTopology-java.lang.String-dht.DHTAllocation-boolean-boolean-boolean-long-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>GraphTopology</h4>
<pre>public&nbsp;GraphTopology(java.lang.String&nbsp;id,
                     dht.DHTAllocation&nbsp;allocation,
                     boolean&nbsp;biDirectional,
                     boolean&nbsp;multigraph,
                     boolean&nbsp;undirected,
                     long&nbsp;vertexCountEstimate)</pre>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="createBidirectionalGraph-biggrph.dataset.BigGrphDataSet-long-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>createBidirectionalGraph</h4>
<pre>public static&nbsp;<a href="../biggrph/GraphTopology.html" title="class in biggrph">GraphTopology</a>&nbsp;createBidirectionalGraph(<a href="../biggrph/dataset/BigGrphDataSet.html" title="class in biggrph.dataset">BigGrphDataSet</a>&nbsp;dataset,
                                                     long&nbsp;vertexCountEstimate)</pre>
</li>
</ul>
<a name="createUndirectedGraph-biggrph.dataset.BigGrphDataSet-long-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>createUndirectedGraph</h4>
<pre>public static&nbsp;<a href="../biggrph/GraphTopology.html" title="class in biggrph">GraphTopology</a>&nbsp;createUndirectedGraph(<a href="../biggrph/dataset/BigGrphDataSet.html" title="class in biggrph.dataset">BigGrphDataSet</a>&nbsp;dataset,
                                                  long&nbsp;vertexCountEstimate)</pre>
</li>
</ul>
<a name="toString--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toString</h4>
<pre>public&nbsp;java.lang.String&nbsp;toString()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>toString</code>&nbsp;in class&nbsp;<code>bigobject.LiveDistributedObject&lt;java.io.Serializable,java.io.Serializable&gt;</code></dd>
</dl>
</li>
</ul>
<a name="toString-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toString</h4>
<pre>public&nbsp;java.lang.String&nbsp;toString(boolean&nbsp;humanNumbers)</pre>
</li>
</ul>
<a name="pickRandomVertex-java.util.Random-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>pickRandomVertex</h4>
<pre>public&nbsp;long&nbsp;pickRandomVertex(java.util.Random&nbsp;random)</pre>
</li>
</ul>
<a name="pickRandomVertices-java.util.Random-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>pickRandomVertices</h4>
<pre>public&nbsp;dht.set.LongSet&nbsp;pickRandomVertices(java.util.Random&nbsp;random,
                                          int&nbsp;n)</pre>
</li>
</ul>
<a name="getOutAdjacencyTable--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getOutAdjacencyTable</h4>
<pre>public&nbsp;<a href="../biggrph/BigAdjacencyTable.html" title="class in biggrph">BigAdjacencyTable</a>&nbsp;getOutAdjacencyTable()</pre>
</li>
</ul>
<a name="getInAdjacencyTable--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getInAdjacencyTable</h4>
<pre>public&nbsp;<a href="../biggrph/BigAdjacencyTable.html" title="class in biggrph">BigAdjacencyTable</a>&nbsp;getInAdjacencyTable()</pre>
</li>
</ul>
<a name="load-bigobject.DataSet-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>load</h4>
<pre>public&nbsp;<a href="../biggrph/GraphTopology.html" title="class in biggrph">GraphTopology</a>&nbsp;load(bigobject.DataSet&lt;<a href="../biggrph/GraphTopology.html" title="class in biggrph">GraphTopology</a>&gt;&nbsp;dataset)</pre>
</li>
</ul>
<a name="load-bigobject.DataSet-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>load</h4>
<pre>public&nbsp;<a href="../biggrph/GraphTopology.html" title="class in biggrph">GraphTopology</a>&nbsp;load(bigobject.DataSet&lt;<a href="../biggrph/GraphTopology.html" title="class in biggrph">GraphTopology</a>&gt;&nbsp;dataset,
                          boolean&nbsp;forceGlobalLoad)</pre>
</li>
</ul>
<a name="save--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>save</h4>
<pre>public&nbsp;void&nbsp;save()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>save</code>&nbsp;in class&nbsp;<code>bigobject.LiveDistributedObject&lt;java.io.Serializable,java.io.Serializable&gt;</code></dd>
</dl>
</li>
</ul>
<a name="isBiDirectional--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isBiDirectional</h4>
<pre>public&nbsp;boolean&nbsp;isBiDirectional()</pre>
</li>
</ul>
<a name="isUndirected--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isUndirected</h4>
<pre>public&nbsp;boolean&nbsp;isUndirected()</pre>
</li>
</ul>
<a name="setBiDirectional-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setBiDirectional</h4>
<pre>public&nbsp;void&nbsp;setBiDirectional(boolean&nbsp;biDirectional)</pre>
</li>
</ul>
<a name="setBiDirectional-boolean-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setBiDirectional</h4>
<pre>public&nbsp;void&nbsp;setBiDirectional(boolean&nbsp;biDirectional,
                             boolean&nbsp;verbose)</pre>
</li>
</ul>
<a name="addEdge-long-long-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addEdge</h4>
<pre>public&nbsp;void&nbsp;addEdge(long&nbsp;src,
                    long&nbsp;dst)</pre>
</li>
</ul>
<a name="delete--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>delete</h4>
<pre>public&nbsp;void&nbsp;delete()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>delete</code>&nbsp;in class&nbsp;<code>bigobject.LiveDistributedObject&lt;java.io.Serializable,java.io.Serializable&gt;</code></dd>
</dl>
</li>
</ul>
<a name="clearLocalData--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>clearLocalData</h4>
<pre>public&nbsp;void&nbsp;clearLocalData()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code>clearLocalData</code>&nbsp;in class&nbsp;<code>bigobject.LiveDistributedObject&lt;java.io.Serializable,java.io.Serializable&gt;</code></dd>
</dl>
</li>
</ul>
<a name="getNumberOfLocalVertices--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNumberOfLocalVertices</h4>
<pre>public&nbsp;int&nbsp;getNumberOfLocalVertices()</pre>
</li>
</ul>
<a name="getNumberOfVertices--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNumberOfVertices</h4>
<pre>public&nbsp;long&nbsp;getNumberOfVertices()</pre>
</li>
</ul>
<a name="getNumberOfVertices-toools.util.LongPredicate-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNumberOfVertices</h4>
<pre>public&nbsp;long&nbsp;getNumberOfVertices(toools.util.LongPredicate&nbsp;filter)</pre>
</li>
</ul>
<a name="getNumberOfEdges--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNumberOfEdges</h4>
<pre>public&nbsp;long&nbsp;getNumberOfEdges()</pre>
</li>
</ul>
<a name="getNumberOfVerticesPerNode--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNumberOfVerticesPerNode</h4>
<pre>public&nbsp;java.util.Map&lt;octojus.OctojusNode,java.lang.Integer&gt;&nbsp;getNumberOfVerticesPerNode()</pre>
</li>
</ul>
<a name="getNumberOfOutEdgesPerNode--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNumberOfOutEdgesPerNode</h4>
<pre>public&nbsp;java.util.Map&lt;octojus.OctojusNode,java.lang.Long&gt;&nbsp;getNumberOfOutEdgesPerNode()</pre>
</li>
</ul>
<a name="getNumberOfInEdgesPerNode--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNumberOfInEdgesPerNode</h4>
<pre>public&nbsp;java.util.Map&lt;octojus.OctojusNode,java.lang.Long&gt;&nbsp;getNumberOfInEdgesPerNode()</pre>
</li>
</ul>
<a name="getNumberOfEdgesAndVerticesPerNode--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNumberOfEdgesAndVerticesPerNode</h4>
<pre>public&nbsp;java.util.Map&lt;octojus.OctojusNode,<a href="../biggrph/_algo/count/EdgeAndVertexCount.html" title="class in biggrph._algo.count">EdgeAndVertexCount</a>&gt;&nbsp;getNumberOfEdgesAndVerticesPerNode()</pre>
</li>
</ul>
<a name="getOutAverageDegree--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getOutAverageDegree</h4>
<pre>public&nbsp;double&nbsp;getOutAverageDegree()</pre>
</li>
</ul>
<a name="getOutMaxDegree--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getOutMaxDegree</h4>
<pre>public&nbsp;<a href="../biggrph/algo/degree/MaxDegreeAlgorithmResult.html" title="class in biggrph.algo.degree">MaxDegreeAlgorithmResult</a>&nbsp;getOutMaxDegree()</pre>
</li>
</ul>
<a name="getOutMaxDegree-toools.util.LongPredicate-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getOutMaxDegree</h4>
<pre>public&nbsp;<a href="../biggrph/algo/degree/MaxDegreeAlgorithmResult.html" title="class in biggrph.algo.degree">MaxDegreeAlgorithmResult</a>&nbsp;getOutMaxDegree(toools.util.LongPredicate&nbsp;predicate)</pre>
</li>
</ul>
<a name="Z:Z__local_loadFromDisk--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>__local_loadFromDisk</h4>
<pre>public&nbsp;void&nbsp;__local_loadFromDisk()
                          throws java.io.IOException,
                                 java.lang.ClassNotFoundException</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>__local_loadFromDisk</code>&nbsp;in class&nbsp;<code>bigobject.LiveDistributedObject&lt;java.io.Serializable,java.io.Serializable&gt;</code></dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.io.IOException</code></dd>
<dd><code>java.lang.ClassNotFoundException</code></dd>
</dl>
</li>
</ul>
<a name="Z:Z__getAssignConnectedComponents--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>__getAssignConnectedComponents</h4>
<pre>public&nbsp;<a href="../biggrph/algo/connected_components/AssignConnectedComponents.html" title="class in biggrph.algo.connected_components">AssignConnectedComponents</a>&nbsp;__getAssignConnectedComponents()</pre>
</li>
</ul>
<a name="getConnectedComponentDistribution--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getConnectedComponentDistribution</h4>
<pre>public&nbsp;toools.math.DistributionForLongs&nbsp;getConnectedComponentDistribution()</pre>
</li>
</ul>
<a name="getNumberOfConnectedComponents--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNumberOfConnectedComponents</h4>
<pre>public&nbsp;long&nbsp;getNumberOfConnectedComponents()</pre>
</li>
</ul>
<a name="getVertexInTheGreatestConnectedComponent--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getVertexInTheGreatestConnectedComponent</h4>
<pre>public&nbsp;long&nbsp;getVertexInTheGreatestConnectedComponent()</pre>
</li>
</ul>
<a name="getConnectedComponentRepresentatives--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getConnectedComponentRepresentatives</h4>
<pre>public&nbsp;dht.set.LongSet&nbsp;getConnectedComponentRepresentatives()</pre>
</li>
</ul>
<a name="getDiameter_iFUB-toools.util.LongPredicate-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDiameter_iFUB</h4>
<pre>public&nbsp;<a href="../biggrph/algo/diameter/DiameterResult.html" title="class in biggrph.algo.diameter">DiameterResult</a>&nbsp;getDiameter_iFUB(toools.util.LongPredicate&nbsp;vertexMatcher)</pre>
</li>
</ul>
<a name="getDiameter_iFUB-long-toools.util.LongPredicate-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDiameter_iFUB</h4>
<pre>public&nbsp;<a href="../biggrph/algo/diameter/DiameterResult.html" title="class in biggrph.algo.diameter">DiameterResult</a>&nbsp;getDiameter_iFUB(long&nbsp;src,
                                       toools.util.LongPredicate&nbsp;vertexMatcher)</pre>
</li>
</ul>
<a name="twoSweeps-long-toools.util.LongPredicate-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>twoSweeps</h4>
<pre>public&nbsp;long&nbsp;twoSweeps(long&nbsp;src,
                      toools.util.LongPredicate&nbsp;vertexMatcher)</pre>
</li>
</ul>
<a name="getLocalMap--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getLocalMap</h4>
<pre>public&nbsp;&lt;any&gt;&nbsp;getLocalMap()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code>getLocalMap</code>&nbsp;in interface&nbsp;<code>ldjo.bsp.BSPable</code></dd>
</dl>
</li>
</ul>
<a name="getOutNeighbors-long-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getOutNeighbors</h4>
<pre>public&nbsp;dht.set.LongSet&nbsp;getOutNeighbors(long&nbsp;v)</pre>
</li>
</ul>
<a name="getInNeighbors-long-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getInNeighbors</h4>
<pre>public&nbsp;dht.set.LongSet&nbsp;getInNeighbors(long&nbsp;v)</pre>
</li>
</ul>
<a name="isMultigraph--">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>isMultigraph</h4>
<pre>public&nbsp;boolean&nbsp;isMultigraph()</pre>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-all.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../biggrph/EdgeObjectAttributeTable.html" title="class in biggrph"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../biggrph/GraphTopology.LoadRequest.html" title="class in biggrph"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?biggrph/GraphTopology.html" target="_top">Frames</a></li>
<li><a href="GraphTopology.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
