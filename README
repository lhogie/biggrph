1. How to compile with Maven

	Checkout the sources from the SVN repository:
	
	$ svn co svn+ssh://scm.gforge.inria.fr/svnroot/dipergrafs/biggrph/trunk
	
	Go into the bigGrph/ project directory, because the parent/toplevel Maven file
	is located here (pom.xml).
	
	$ cd bigGrph
	
	Use the following command to build all the projects, run all tests and produce
	binaries and source jars.
	
	$ mvn package
	
	Other useful Maven goals are :
	- clean to remove all Maven outputs in all BigGrph projects.
	- install to build all the projects and store them in the user local repository (default
	  location is ~/.m2/repository)
	- test runs the tests (done during the package phase, unless -DskipTests is given to maven)
	 
	The 'package' goal will produce in the target/ directory of the bigGrph project the
	two archives :
	
	biggrph-1.0-SNAPSHOT.jar : Binaries of BigGrph and all dependencies (including hppc)
	biggrph-1.0-SNAPSHOT-sources.jar : Source files of BigGrph
	
	the first JAR-archive can be used as the classpath to run BigGrph programs (option -cp
	of the java executable).
	the 1.0-SNAPSHOT is the current version of the software: it is defined in all the pom.xml
	files in all the java projects. See below for a way to change this version to a new value. 

	In every project (toools, jacaboo, ldjo, etc...) There is a target/ directory
	with two JAR-archives.

	The unit tests are always compiled and executed during the package phase. To skip the
	execution of tests while still compiling these tests, use the option -Dmaven.test.skip.exec=true
	to maven:
	
	$ mvn package -Dmaven.test.skip.exec=true
	
	If you want to skip both the compilation and the execution of tests, use -DskipTests.
	
	 
2. How to set the version for a release

	$ cd bigGrph
	$ mvn versions:set -DnewVersion="1.1"
	$ mvn clean package
	
	This will produce the two jars with the new version number : biggrph-1.1.jar and
	biggrph-1.1-sources.jar.


3. Example programs

    The biggrph.examples project contains some example programs. Its build output is an
    executable jar that can be used to launch a BFS on a graph.
    
    $ java -jar biggrph.examples-1.0-SNAPSHOT.jar -?
	Command line parsing failed: Unrecognized option: -?
	usage: java [jvm args] fr.inria.coati.biggrph.examples.BigGrphBFSExample
 	 -a,--adjlist           the dataset file contains adjacency lists
 	 -d,--dataset <arg>     specify the dataset name
	 -e,--edgelist          the dataset file contains an edge list (default)
	 -f,--file <arg>        specify the dataset filename
	 -i,--ib                use IP over Infiniband
	 -l,--localhost <arg>   execute on localhost with the specified number of
    	                    processes
	    --noglobalload      does not force the dataset to be loaded from a
                        	global file
	 -s,--source <arg>      specify the BFS search source vertex
	    --savelocal         enable save of local parts of the dataset
	 -t,--threads <arg>     specify the number of threads (default 1)
    
